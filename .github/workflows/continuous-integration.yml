name: "Continuous Integration"

on:
  pull_request:
  push:

env:
  fail-fast: true

jobs:
  phpunit-smoke-check-dbal-3:
    name: "Experimental: PHPUnit with SQLite and DBAL 3"
    runs-on: "ubuntu-20.04"
    continue-on-error: true

    strategy:
      matrix:
        php-version:
          - "8.0"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "pdo, pdo_sqlite"
          coverage: "pcov"
          ini-values: "zend.assertions=1"

      - name: "Require DBAL 3"
        run: "composer require doctrine/dbal ^3.0 --no-update"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v1"

      - name: "Run PHPUnit"
        continue-on-error: true
        run: "vendor/bin/phpunit -c ci/github/phpunit/sqlite.xml --coverage-clover=coverage-no-cache.xml --exclude-group performance,locking_functional,dbal2"
        env:
            ENABLE_SECOND_LEVEL_CACHE: 0

      - name: "Run PHPUnit with Second Level Cache"
        id: "phpunit-run-slc"
        continue-on-error: true
        run: "vendor/bin/phpunit -c ci/github/phpunit/sqlite.xml --exclude-group performance,non-cacheable,locking_functional,dbal2 --coverage-clover=coverage-cache.xml"
        env:
            ENABLE_SECOND_LEVEL_CACHE: 1

      - name: "Upload coverage file"
        uses: "actions/upload-artifact@v2"
        if: "steps.phpunit-run-slc.outcome == 'success' && steps.phpunit-run-slc.conclusion == 'success'"
        with:
          name: "phpunit-sqlite-${{ matrix.php-version }}-dbal3-coverage"
          path: "coverage*.xml"

  phpunit-smoke-check:
    name: "PHPUnit with SQLite"
    runs-on: "ubuntu-20.04"

    strategy:
      matrix:
        php-version:
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "pdo, pdo_sqlite"
          coverage: "pcov"
          ini-values: "zend.assertions=1"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v1"

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit -c ci/github/phpunit/sqlite.xml --coverage-clover=coverage-no-cache.xml"
        env:
            ENABLE_SECOND_LEVEL_CACHE: 0

      - name: "Run PHPUnit with Second Level Cache"
        run: "vendor/bin/phpunit -c ci/github/phpunit/sqlite.xml --exclude-group performance,non-cacheable,locking_functional,dbal3 --coverage-clover=coverage-cache.xml"
        env:
            ENABLE_SECOND_LEVEL_CACHE: 1

      - name: "Upload coverage file"
        uses: "actions/upload-artifact@v2"
        with:
          name: "phpunit-sqlite-${{ matrix.php-version }}-coverage"
          path: "coverage*.xml"


  phpunit-postgres:
    name: "PHPUnit with PostgreSQL"
    runs-on: "ubuntu-20.04"
    needs: "phpunit-smoke-check"

    strategy:
      matrix:
        php-version:
          - "7.4"
        postgres-version:
          - "9.6"
          - "13"

    services:
      postgres:
        image: "postgres:${{ matrix.postgres-version }}"
        env:
          POSTGRES_PASSWORD: "postgres"

        options: >-
          --health-cmd "pg_isready"

        ports:
          - "5432:5432"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "pcov"
          ini-values: "zend.assertions=1"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v1"

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit -c ci/github/phpunit/pdo_pgsql.xml --coverage-clover=coverage.xml"

      - name: "Upload coverage file"
        uses: "actions/upload-artifact@v2"
        with:
          name: "${{ github.job }}-${{ matrix.postgres-version }}-${{ matrix.php-version }}-coverage"
          path: "coverage.xml"


  phpunit-mariadb:
    name: "PHPUnit with MariaDB"
    runs-on: "ubuntu-20.04"
    needs: "phpunit-smoke-check"

    strategy:
      matrix:
        php-version:
          - "7.4"
        mariadb-version:
          - "10.5"
        extension:
          - "mysqli"
          - "pdo_mysql"

    services:
      mariadb:
        image: "mariadb:${{ matrix.mariadb-version }}"
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: "doctrine_tests"

        options: >-
          --health-cmd "mysqladmin ping --silent"

        ports:
          - "3306:3306"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "pcov"
          ini-values: "zend.assertions=1"
          extensions: "${{ matrix.extension }}"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v1"

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit -c ci/github/phpunit/${{ matrix.extension }}.xml --coverage-clover=coverage.xml"

      - name: "Upload coverage file"
        uses: "actions/upload-artifact@v2"
        with:
          name: "${{ github.job }}-${{ matrix.mariadb-version }}-${{ matrix.extension }}-${{ matrix.php-version }}-coverage"
          path: "coverage.xml"


  phpunit-mysql:
    name: "PHPUnit with MySQL"
    runs-on: "ubuntu-20.04"
    needs: "phpunit-smoke-check"

    strategy:
      matrix:
        php-version:
          - "7.4"
        mysql-version:
          - "5.7"
          - "8.0"
        extension:
          - "mysqli"
          - "pdo_mysql"

    services:
      mysql:
        image: "mysql:${{ matrix.mysql-version }}"

        options: >-
          --health-cmd "mysqladmin ping --silent"
          -e MYSQL_ALLOW_EMPTY_PASSWORD=yes
          -e MYSQL_DATABASE=doctrine_tests

        ports:
          - "3306:3306"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "pcov"
          ini-values: "zend.assertions=1"
          extensions: "${{ matrix.extension }}"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v1"

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit -c ci/github/phpunit/${{ matrix.extension }}.xml --coverage-clover=coverage-no-cache.xml"
        env:
            ENABLE_SECOND_LEVEL_CACHE: 0

      - name: "Run PHPUnit with Second Level Cache"
        run: "vendor/bin/phpunit -c ci/github/phpunit/${{ matrix.extension }}.xml --exclude-group performance,non-cacheable,locking_functional,dbal3 --coverage-clover=coverage-no-cache.xml"
        env:
            ENABLE_SECOND_LEVEL_CACHE: 1

      - name: "Upload coverage files"
        uses: "actions/upload-artifact@v2"
        with:
          name: "${{ github.job }}-${{ matrix.mysql-version }}-${{ matrix.extension }}-${{ matrix.php-version }}-coverage"
          path: "coverage*.xml"

  phpunit-lower-php-versions:
    name: "PHPUnit with SQLite"
    runs-on: "ubuntu-20.04"

    strategy:
      matrix:
        php-version:
          - "7.1"
        deps:
          - "highest"
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          ini-values: "zend.assertions=1"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.deps }}"

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit -c ci/github/phpunit/sqlite.xml"

  upload_coverage:
    name: "Upload coverage to Codecov"
    runs-on: "ubuntu-20.04"
    needs:
      - "phpunit-smoke-check"
      - "phpunit-postgres"
      - "phpunit-mariadb"
      - "phpunit-mysql"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Download coverage files"
        uses: "actions/download-artifact@v2"
        with:
          path: "reports"

      - name: "Upload to Codecov"
        uses: "codecov/codecov-action@v1"
        with:
          directory: reports
